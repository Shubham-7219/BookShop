 @model MyModel.DTOs.BookDisplayModel
@{

}
<style>
    .card-img-top {
        width: 100%;
        height: 200px; /* Adjust the height as needed */
        object-fit: cover; /* Ensures the image covers the specified area without stretching */
    }
</style>
<form class="row row-cols-lg-auto g-3 align-items-center mt-4">


    <div class="col-12">
        <label class="visually-hidden" for="genreId">Preference</label>
        <select class="form-select" id="genreId" name="genreId">
            <option selected>Choose...</option>
            @foreach (var genre in Model.Genres)
            {
                <option selected ="@(genre.Id ==Model.GenreId)"  value="@genre.Id">@genre.Name</option>
            }
        </select>
    </div>

    <div class="col-12">
        <label class="visually-hidden" for="sterm">Username</label>
        <div class="input-group">
            <div class="input-group-text"></div>
            <input type="text" class="form-control" value="@Model.STerm" id="sterm" placeholder="Username" name="sterm">
        </div>
    </div>

    <div class="col-12">
        <button type="submit" class="btn btn-primary" id="inlineFormInputGroupUsername">Search Book By Title</button>
        <a href="/Home/Index" class="btn btn-primary">Reset</a>
    </div>
</form>

<div class="w-100 d-flex flex-wrap mt-5">
    @foreach (var book in Model.Books)
    {
        <div class="card mx-2 mb-4 " style="width: 16rem;">
            <img src="/images/@book.Image" class="card-img-top" alt="...">
            <div class="card-body">
                <h5 class="card-title">@book.BookName</h5>
                <p class="card-text">
                    Genre: @book.GenreName
                </p>
                <p class="card-text">
                    Author :@book.AuthorName
                </p>
                <p class="card-text">
                    Price :@book.Price
                </p>
                @* <p class="card-text">
                    Price :@book.Quantity
                </p> *@
                @if (book.Quantity > 0)
                {
                    <Button type="button" onclick="add(@book.Id)" class="btn btn-primary">Add To Cart</Button>
                }
                else
                {
                    <span style="border: 1px solid;padding: 5px 8px;color: red;border-radius: 5px;">Out of stock</span>

                }
            </div>
        </div>
    }
</div>

@section Scripts {
@*     <script>
        alert("hello");
        async function add(bookId) {
            try {
                var response = await fetch(`/Cart/AddItem?bookId=${bookId}`);
                if (response.status == 200) {
                    var result = await response.json();
                    var cartCountEl = document.getElementById("cartCount");
                    cartCountEl.innerHTML = result;
                }
            }
            catch (err) {
                console.log(err);
            }
        }
    </script> *@

    <script>
        async function add(bookId) {
            var usernameEl = document.getElementById("username");
            if (usernameEl == null) {
                window.location.href = "/Identity/Account/Login";
             
            }
            try {
                var response = await fetch(`/Cart/AddItem?bookId=${bookId}`);
                if (response.status == 200) {
                    var result = await response.json();
                    var cartCountEl = document.getElementById("cartCount");
                    cartCountEl.innerHTML = result;
                    window.location.href = "#cartCount";
                }
            }
            catch (err) {
                console.log(err);
            }
        }
    </script>





}